#include <SoftwareSerial.h>

SoftwareSerial esp8266(2,3); // RX, TX
// Pin RX del ESP-01 al pin 2 del Arduino
// Pin TX del ESP-01 al pin 3 del Arduino

void setup() {
  Serial.begin(9600);
  esp8266.begin(9600);
  delay(1000);
  
  Serial.println("Connecting to WiFi...");
  esp8266.println("AT+CWJAP=\"fh_80d1e8\",\"4567gljc\"");
  // Reemplazar SSID y PASSWORD por los de tu red WiFi
  
  while(!esp8266.find("OK")) {
    Serial.println("Failed to connect to WiFi");
    delay(1000);
    esp8266.println("AT+CWJAP=\"SSID\",\"PASSWORD\"");
  }
  
  Serial.println("Connected to WiFi");
  
  esp8266.println("AT+CIPMUX=1"); // Activar modo múltiple
  delay(100);
  esp8266.println("AT+CIPSERVER=1,80"); // Iniciar servidor en el puerto 80
  delay(100);
  
  Serial.println("Server started");
}

void loop() {
  if(esp8266.available()) {
    String command = esp8266.readStringUntil('\r');
    
    if(command.indexOf("GET / ") >= 0) { // Si se recibe una solicitud HTTP GET
      Serial.println("Serving page");
      
      // Envía la respuesta HTTP con la página HTML
      esp8266.println("HTTP/1.1 200 OK");
      esp8266.println("Content-Type: text/html");
      esp8266.println("Connection: close");
      esp8266.println();
      esp8266.println("<html><head><title>ESP8266 Web Server</title></head><body><h1>Hello World!</h1></body></html>");
      
      // Cierra la conexión
      esp8266.println("AT+CIPCLOSE=0");
    }
  }
}
