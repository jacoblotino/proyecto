#include <SoftwareSerial.h>

SoftwareSerial SerialESP8266(2, 3); // crear un objeto SoftwareSerial en los pines 2 (RX) y 3 (TX)

String ssid = "fh_80d1e8";//nombre_de_red
String password = "4567gljc";//contraseña_de_red

//String ssid = "AndroidAP";//nombre_de_red
//String password = "4567gljc";//contraseña_de_red
String server = "www.google.com"; // dirección IP del servidor o dominio
int port = 80; // puerto del servidor 
void setup() {
  Serial.begin(9600); // inicializar la comunicación serial de hardware
  SerialESP8266.begin(9600); // inicializar la comunicación serial de software
  SerialESP8266.setTimeout(2000);
  
  //Verificamos si el ESP8266 responde
  SerialESP8266.println("AT");
  delay(1000); // Espera 1 segundo
  if(SerialESP8266.find("OK")) {
    Serial.println("OK ");
  } else {
    Serial.println("Error en ESP8266");
  }
    //Nos conectamos a una red wifi    
   String command = "AT+CWJAP=\"" + ssid + "\",\"" + password + "\"";
SerialESP8266.println(command);
    Serial.println("Conectandose a la red ...");
    SerialESP8266.setTimeout(10000); //Aumentar si demora la conexion
    if(SerialESP8266.find("OK"))
      Serial.println("WIFI conectado");
    else
      Serial.println("Error al conectarse en la red");
    SerialESP8266.setTimeout(2000);
//    EJEMPLO COMO SERVIDOR TCP:
 //Habilitar multiples conexiones
    SerialESP8266.println("AT+CIPMUX=1");
    if(SerialESP8266.find("OK"))
     Serial.println("Habilitar multiples conexiones");
else
     Serial.println("NO Habilitar multiples conexiones");  
     if (SerialESP8266.available()) {
    Serial.write(SerialESP8266.read());
  }
  
  //   Obteniendo dirección IP...
  Serial.println("Obteniendo direccion IP...");
  SerialESP8266.println("AT+CIFSR");
  delay(1000);
  while (SerialESP8266.available()) {
    Serial.write(SerialESP8266.read());
  }

// Establecemos una conexión TCP con Google
  Serial.println("Conectnndose a Google ...");
//  SerialESP8266.println("AT+CIPSTART=\"TCP\",\"www.google.com\",80");
char cmd[100];
sprintf(cmd, "AT+CIPSTART=0,\"TCP\",\"%s\",%d", server.c_str(), port);
  SerialESP8266.println(cmd);
   
delay(1000); // Espera 1 segundo para que la conexión se establezca

SerialESP8266.println("AT+CIPSTATUS");
while(SerialESP8266.available()) {
  Serial.write(SerialESP8266.read());
    
  }  
  
  if (SerialESP8266.find("OK"))
    Serial.println("Conexion exitosa");
  else
    Serial.println("Error en la conexion");
  SerialESP8266.setTimeout(2000);
}


void loop() {
 
}
