#include <SoftwareSerial.h>

SoftwareSerial SerialESP8266(2, 3); // crear un objeto SoftwareSerial en los pines 2 (RX) y 3 (TX)

String ssid = "fh_80d1e8";//nombre_de_red
String password = "4567gljc";//contraseña_de_red

//String ssid = "AndroidAP";//nombre_de_red
//String password = "4567gljc";//contraseña_de_red
String server = "www.google.com"; // dirección IP del servidor o dominio
int port = 80; // puerto del servidor 
void setup() {
  Serial.begin(9600); // inicializar la comunicación serial de hardware
  SerialESP8266.begin(9600); // inicializar la comunicación serial de software
  SerialESP8266.setTimeout(2000);
  
  //Verificamos si el ESP8266 responde
  SerialESP8266.println("AT");
  delay(1000); // Espera 1 segundo
  if(SerialESP8266.find("OK")) {
    Serial.println("OK ");
  } else {
    Serial.println("Error en ESP8266");
  }
    //Nos conectamos a una red wifi    
   String command = "AT+CWJAP=\"" + ssid + "\",\"" + password + "\"";
SerialESP8266.println(command);
    Serial.println("Conectandose a la red ...");
    SerialESP8266.setTimeout(10000); //Aumentar si demora la conexion
    if(SerialESP8266.find("OK"))
      Serial.println("OK");
    else
      Serial.println("Error al conectarse en la red");  
  
  // saber a que red estamos conectados
   Serial.println("saber a que red estamos conectados ");     
  SerialESP8266.println("AT+CWJAP?");// saber a que red estamos conectados
  delay (1000);
  while (SerialESP8266.available()) {
    Serial.write(SerialESP8266.read());
}  
     
       // Obtener la dirección IP del módulo ESP8266
   Serial.println("Direccion actual de la IP ");     
  SerialESP8266.println("AT+CIFSR");// muestra la Direccion actual de la IP d
  delay (1000);
  while (SerialESP8266.available()) {
    Serial.write(SerialESP8266.read());
}
//El comando AT+CWMODE nos permite asignar el modo WIFI,
   Serial.println("Asignar el modo WIFI ");     
  SerialESP8266.println("AT+CWMODE?");// muestra la Direccion actual de la IP d
  delay (1000);
  while (SerialESP8266.available()) {
    Serial.write(SerialESP8266.read());
}



  delay(1000); // Espera 1 segundo para que el módulo ESP8266 se inicialice
  SerialESP8266.println("AT+CIPMUX=0"); // Establece el modo de conexión única
  delay(1000); // Espera 1 segundo para que el módulo ESP8266 procese el comando
  SerialESP8266.println("AT+CIPMUX=1"); // Establece el modo de conexión múltiple
  delay(1000); // Espera 1 segundo para que el módulo ESP8266 procese el comando
  //Determinar  en modo esta la  conexión (única o múltiple) con el comando AT+CIPMUX?
   Serial.println("Determinar el Tipo de conexion al Modulo ");     
  SerialESP8266.println("AT+CIPMUX?");
  delay (1000);
  while (SerialESP8266.available()) {
    Serial.write(SerialESP8266.read());
}

}

void loop() {
  if (SerialESP8266.available()) {
    Serial.write(SerialESP8266.read()); // Imprime la respuesta del módulo ESP8266 en el monitor serial de la computadora
  }
}
